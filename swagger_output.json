{
  "swagger": "2.0",
  "info": {
    "title": "Green Shop",
    "description": "Documentation automatically generated by swagger-autogen",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format: Bearer <token>"
    }
  },
  "paths": {
    "/api/user/auth/sign-up": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/user/auth/send-verification": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/user/auth/check-verification": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/user/auth/sign-in": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/user/auth/logout": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/user/auth/refresh": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/user/password/send-token": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/user/password/change": {
      "put": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/user/profile": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/user/profile/update": {
      "put": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/item/create": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/item/update/status/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/item/update/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/item/delete/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/item/my": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/item/search": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/item/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/category/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "description": "Retrieve categories with item count.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "A search query to filter categories by name or description.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the items to filter by.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "enum": {
                  "type": "array",
                  "example": [
                    "approved",
                    "waiting",
                    "rejected"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "default": {
                  "type": "string",
                  "example": "approved"
                }
              }
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "The start date to filter items.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date"
                }
              }
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "The end date to filter items.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of categories with item counts.",
            "schema": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "string"
                      },
                      "name": {
                        "type": "string",
                        "example": "string"
                      },
                      "count": {
                        "type": "number",
                        "example": 0
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied if the user is not an admin and tries to access non-approved items.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/category/add": {
      "post": {
        "tags": [
          "Categories"
        ],
        "description": "Add a new category.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data for creating a new category.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Electronics"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Category created successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation error or missing required fields.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Name is required."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/category/delete/{id}": {
      "delete": {
        "tags": [
          "Categories"
        ],
        "description": "Delete a category by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the category to be deleted.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category deleted successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Category deleted successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid category ID.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Incorrect category ID."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied if the user is not an admin.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/category/update/{id}": {
      "put": {
        "tags": [
          "Categories"
        ],
        "description": "Update a category by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the category to be updated.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "Data for updating the category.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Updated Category Name"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category updated successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Category updated successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation error or missing required fields.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Incorrect category ID."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied if the user is not an admin.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}