{
  "swagger": "2.0",
  "info": {
    "title": "Lost & Found Service API",
    "description": "Documentation automatically generated by swagger-autogen",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format: Bearer <token>"
    }
  },
  "paths": {
    "/api/user/auth/sign-up": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Sign up a new user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User registration data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John"
                },
                "surname": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "securepassword123"
                }
              },
              "required": [
                "name",
                "surname",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registration initiated.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Please pass verification to finish creating user."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Name is required."
                    },
                    "surname": {
                      "type": "string",
                      "example": "Surname is required."
                    },
                    "email": {
                      "type": "string",
                      "example": "Email is required."
                    },
                    "password": {
                      "type": "string",
                      "example": "Password is required."
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "User with email already exists.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "User with this email already exists."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal Server Error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/user/auth/send-verification": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Send verification email for user registration.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Email and redirect URL for verification.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "redirectUrl": {
                  "type": "string",
                  "example": "https://example.com/verify"
                }
              },
              "required": [
                "email",
                "redirectUrl"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Verification email sent successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Account verification sent successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid email.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Invalid email."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Account already verified.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Account with this email already verified."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "429": {
            "description": "Too many requests for verification.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Please wait X seconds before resending."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal Server Error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/user/auth/check-verification": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Check verification token for user registration.",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "query",
            "description": "The verification token from the email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "User created successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Invalid or expired verification token.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Verification token is invalid or expired."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal Server Error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/user/auth/sign-in": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Sign in an existing user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User login data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "securepassword123"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User signed in successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "string"
                },
                "role": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Invalid email or password.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Invalid email or password."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal Server Error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/user/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Log out the current user.",
        "responses": {
          "200": {
            "description": "User logged out successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Logged out successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal Server Error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/user/auth/refresh": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Refresh access token using a refresh token.",
        "responses": {
          "200": {
            "description": "New access token generated.",
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Refresh token is invalid or expired."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal Server Error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/user/password/send-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Send a password reset token to the user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Email and redirect URL for password reset.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "redirectUrl": {
                  "type": "string",
                  "example": "https://example.com/reset-password"
                }
              },
              "required": [
                "email",
                "redirectUrl"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset link sent successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Password reset link sent successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "User with this email does not exist."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal Server Error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/user/password/change": {
      "put": {
        "tags": [
          "Auth"
        ],
        "description": "Reset user password using a valid reset token.",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "The password reset token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "New password for the user.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newPassword": {
                  "type": "string",
                  "example": "newSecurePassword123"
                }
              },
              "required": [
                "newPassword"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Password reset successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid or missing password.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "New password is invalid."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Invalid or expired reset token.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Reset token is invalid or expired."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal Server Error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/user/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Retrieve the current user profile.",
        "responses": {
          "200": {
            "description": "Current user profile data.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John"
                },
                "surname": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "telegram": {
                  "type": "string",
                  "example": "john_doe_telegram"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "+123456789"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal Server Error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/user/profile/update": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update the user profile.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User profile update data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John"
                },
                "surname": {
                  "type": "string",
                  "example": "Doe"
                },
                "password": {
                  "type": "string",
                  "example": "currentPassword123"
                },
                "newPassword": {
                  "type": "string",
                  "example": "newSecurePassword123"
                },
                "telegram": {
                  "type": "string",
                  "example": "john_doe_telegram"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "+123456789"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Profile updated successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Profile updated successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid data or missing fields.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Password is incorrect."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "User not found."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal Server Error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/item/create": {
      "post": {
        "tags": [
          "Item"
        ],
        "description": "Create a new item.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data for creating a new item.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Item Name"
                },
                "description": {
                  "type": "string",
                  "example": "Item Description"
                },
                "date": {
                  "type": "string",
                  "example": "2025-01-01"
                },
                "categoryId": {
                  "type": "string",
                  "example": "1234567890abcdef12345678"
                },
                "type": {
                  "type": "string",
                  "example": "lost"
                }
              },
              "required": [
                "name",
                "description",
                "date",
                "categoryId",
                "type"
              ]
            }
          },
          {
            "name": "images",
            "in": "formData",
            "type": "array",
            "items": {
              "type": "file",
              "format": "binary"
            },
            "description": "Up to 5 images for the item, provided as file uploads."
          }
        ],
        "responses": {
          "200": {
            "description": "Item created successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Item created successfully."
                },
                "itemId": {
                  "type": "string",
                  "example": "1234567890abcdef12345678"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation error.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Name is required."
                },
                "categoryId": {
                  "type": "string",
                  "example": "Category ID is required."
                },
                "date": {
                  "type": "string",
                  "example": "Date is required."
                },
                "images": {
                  "type": "string",
                  "example": "Images are required."
                },
                "type": {
                  "type": "string",
                  "example": "Type is incorrect. It should be either 'lost' or 'found'."
                },
                "detail": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid token.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Invalid token or unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Category not found.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Category not found."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/item/update/status/{id}": {
      "put": {
        "tags": [
          "Item"
        ],
        "description": "Update the status of an item by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the item to update.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "The new status for the item. (Valid values: approved, waiting, rejected)",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "itemStatus": {
                  "type": "string",
                  "example": "approved"
                }
              },
              "required": [
                "itemStatus"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Item status updated successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Item approved successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Incorrect item status.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Incorrect item status."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid token.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Invalid token or unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/item/update/{id}": {
      "put": {
        "tags": [
          "Item"
        ],
        "description": "Update an existing item by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the item to update.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "Data for updating the item. Images can be added as file uploads, and existing images can be deleted using their URLs.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Updated Item Name"
                },
                "description": {
                  "type": "string",
                  "example": "Updated Item Description"
                },
                "date": {
                  "type": "string",
                  "example": "2025-01-01"
                },
                "categoryId": {
                  "type": "string",
                  "example": "1234567890abcdef12345678"
                },
                "type": {
                  "type": "string",
                  "example": "lost"
                },
                "deleteImages": {
                  "type": "array",
                  "example": [
                    "https://example.com/image1.jpg"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name",
                "description",
                "date",
                "categoryId",
                "type"
              ]
            }
          },
          {
            "name": "images",
            "in": "formData",
            "type": "array",
            "items": {
              "type": "file",
              "format": "binary"
            },
            "description": "Up to 5 new images for the item, provided as file uploads."
          }
        ],
        "responses": {
          "204": {
            "description": "Item updated successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Item updated successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation error or missing required fields.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Images are required. You cannot delete all images without adding new ones."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid token.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Invalid token or unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/item/delete/{id}": {
      "delete": {
        "tags": [
          "Item"
        ],
        "description": "Delete an item by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the item to delete.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Item deleted successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid token.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Invalid token or unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Item not found.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Item not found."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/item/my": {
      "get": {
        "tags": [
          "Item"
        ],
        "description": "Retrieve all items created by the current user.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "default": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "default": {
                  "type": "number",
                  "example": 10
                }
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of items to retrieve (lost or found).",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "enum": {
                  "type": "array",
                  "example": [
                    "lost",
                    "found"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "default": {
                  "type": "string",
                  "example": "lost"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of items created by the current user.",
            "schema": {
              "type": "object",
              "properties": {
                "totalItems": {
                  "type": "number",
                  "example": 0
                },
                "limit": {
                  "type": "number",
                  "example": 10
                },
                "totalPages": {
                  "type": "number",
                  "example": 0
                },
                "page": {
                  "type": "number",
                  "example": 1
                },
                "type": {
                  "type": "string",
                  "example": "lost"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "string"
                      },
                      "name": {
                        "type": "string",
                        "example": "string"
                      },
                      "description": {
                        "type": "string",
                        "example": "string"
                      },
                      "type": {
                        "type": "string",
                        "example": "string"
                      },
                      "date": {
                        "type": "string",
                        "example": "string"
                      },
                      "category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "string"
                          },
                          "name": {
                            "type": "string",
                            "example": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid token.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Invalid token or unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/item/search": {
      "get": {
        "tags": [
          "Item"
        ],
        "description": "Search for items.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "default": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "default": {
                  "type": "number",
                  "example": 10
                }
              }
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search query string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Category ID to filter items.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of items to search for (lost or found).",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "enum": {
                  "type": "array",
                  "example": [
                    "lost",
                    "found"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "default": {
                  "type": "string",
                  "example": "lost"
                }
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of items to search for.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "enum": {
                  "type": "array",
                  "example": [
                    "approved",
                    "waiting",
                    "rejected"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "default": {
                  "type": "string",
                  "example": "approved"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting order (newest or oldest).",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "enum": {
                  "type": "array",
                  "example": [
                    "newest",
                    "oldest"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "default": {
                  "type": "string",
                  "example": "newest"
                }
              }
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Filter items from this date.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date"
                }
              }
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "Filter items up to this date.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results for items.",
            "schema": {
              "type": "object",
              "properties": {
                "totalItems": {
                  "type": "number",
                  "example": 0
                },
                "limit": {
                  "type": "number",
                  "example": 10
                },
                "totalPages": {
                  "type": "number",
                  "example": 0
                },
                "page": {
                  "type": "number",
                  "example": 1
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "string"
                      },
                      "name": {
                        "type": "string",
                        "example": "string"
                      },
                      "description": {
                        "type": "string",
                        "example": "string"
                      },
                      "type": {
                        "type": "string",
                        "example": "string"
                      },
                      "date": {
                        "type": "string",
                        "example": "string"
                      },
                      "category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "string"
                          },
                          "name": {
                            "type": "string",
                            "example": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid token.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Invalid token or unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/item/{id}": {
      "get": {
        "tags": [
          "Item"
        ],
        "description": "Retrieve an item by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the item.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the item.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "string"
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "date": {
                  "type": "string",
                  "example": "string"
                },
                "category": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "string"
                    },
                    "name": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "images": {
                  "type": "array",
                  "example": [
                    "string"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "string"
                    },
                    "name": {
                      "type": "string",
                      "example": "string"
                    },
                    "surname": {
                      "type": "string",
                      "example": "string"
                    },
                    "email": {
                      "type": "string",
                      "example": "string"
                    },
                    "telegram": {
                      "type": "string",
                      "example": "string"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid token.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Invalid token or unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Item not found.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Item not found."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/category/": {
      "get": {
        "tags": [
          "Category"
        ],
        "description": "Retrieve categories with item count.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "A search query to filter categories by name or description.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the items to filter by.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "enum": {
                  "type": "array",
                  "example": [
                    "approved",
                    "waiting",
                    "rejected"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "default": {
                  "type": "string",
                  "example": "approved"
                }
              }
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "The start date to filter items.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date"
                }
              }
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "The end date to filter items.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of categories with item counts.",
            "schema": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "string"
                      },
                      "name": {
                        "type": "string",
                        "example": "string"
                      },
                      "count": {
                        "type": "number",
                        "example": 0
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied if the user is not an admin and tries to access non-approved items.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/category/add": {
      "post": {
        "tags": [
          "Category"
        ],
        "description": "Add a new category.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data for creating a new category.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Electronics"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Category created successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation error or missing required fields.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Name is required."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied if the user is not an admin.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/category/delete/{id}": {
      "delete": {
        "tags": [
          "Category"
        ],
        "description": "Delete a category by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the category to be deleted.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category deleted successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Category deleted successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid category ID.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Incorrect category ID."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied if the user is not an admin.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/category/update/{id}": {
      "put": {
        "tags": [
          "Category"
        ],
        "description": "Update a category by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the category to be updated.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "Data for updating the category.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Updated Category Name"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category updated successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Category updated successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation error or missing required fields.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Incorrect category ID."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Unauthorized."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Access denied if the user is not an admin.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Access denied."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "example": "Internal server error."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}